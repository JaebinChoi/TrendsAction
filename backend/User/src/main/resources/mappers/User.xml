<?xml version="1.0" encoding="UTF-8"?>
<!-- mappers/gueset.xml -->
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- mappers/user.xml -->
<mapper namespace="com.action.trends.repository.UserRepository"> <!-- mybatis는 namespace필수!! -->

	<!-- 닉네임 중복 확인 -->
	<select id="checknickname" resultType="int">
		select EXISTS (select * from user where nickname=#{nickname})
	</select>
	
	<!-- 유저정보(id로 확인) 확인 -->
	<select id="detail" resultType="User">
		select *
		from user
		where id = #{userId}
	</select>
	
	<!-- 유저정보(이메일로 확인) 확인 -->
	<select id="detailByEmail" resultType="User">
		select *
		from user
		where email = #{email}
	</select>
	
	<!-- 유저정보 수정 -->
	<update id="update">
		update user
		set nickname = #{nickname},
			profile = #{profile}
		where id = #{id}
	</update>
	
	<!-- 유저정보 삭제 -->
	<delete id="delete" parameterType="int">
		delete 
		  from user 
		 where id = #{userId}
	</delete>
	
	
	
	<!-- 유저 개인의 카테고리 정보 확인 -->
	<select id="userCategoryList" resultType="Integer">
		select category_id
		from user_category
		where user_id = #{userId}
	</select>
	
	
	<!-- 유저 개인의 카테고리 정보 삽입 -->
	
	<insert id="insertUserCategory">
	    INSERT INTO user_category (user_id, category_id) 
	    VALUES (#{userId} , #{categoryId})
	</insert>


	<!-- 유저 개인의 카테고리 정보 삭제 -->
	<delete id="deleteUserCategory">
		 delete 
		 from user_category
		 where user_id = #{userId} and category_id = #{categoryId} 
	</delete>
	
	<!-- 유저 개인의 카테고리 정보 확인 return 카테고리이름 버전-->
	<select id="userCategoryListAsString" resultType="String">
		select name
		from user_category as us, category as ca
		where us.category_id = ca.id and user_id = #{userId}
	</select>
	
</mapper>